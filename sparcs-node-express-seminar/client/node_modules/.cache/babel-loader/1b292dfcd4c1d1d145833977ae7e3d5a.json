{"ast":null,"code":"var _jsxFileName = \"E:\\\\Sparcs-Express\\\\sparcs-database-seminar\\\\sparcs-node-express-seminar\\\\client\\\\src\\\\pages\\\\feed.tsx\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport axios from \"axios\";\nimport { SAPIBase } from \"../tools/api\";\nimport Header from \"../components/header\";\nimport \"./css/feed.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst FeedPage = props => {\n  _s();\n\n  const [LAPIResponse, setLAPIResponse] = React.useState([]);\n  const [NPostCount, setNPostCount] = React.useState(0);\n  const [SNewPostTitle, setSNewPostTitle] = React.useState(\"\");\n  const [SNewPostContent, setSNewPostContent] = React.useState(\"\");\n  React.useEffect(() => {\n    let BComponentExited = false;\n\n    const asyncFun = async () => {\n      const {\n        data\n      } = await axios.get(SAPIBase + `/feed/getFeed?count=${NPostCount}`);\n      console.log(data); // const data = [ { id: 0, title: \"test1\", content: \"Example body\" }, { id: 1, title: \"test2\", content: \"Example body\" }, { id: 2, title: \"test3\", content: \"Example body\" } ].slice(0, NPostCount);\n\n      if (BComponentExited) return;\n      setLAPIResponse(data);\n    };\n\n    asyncFun().catch(e => window.alert(`Error while running API Call: ${e}`));\n    return () => {\n      BComponentExited = true;\n    };\n  }, [NPostCount]);\n\n  const createNewPost = () => {\n    const asyncFun = async () => {\n      await axios.post(SAPIBase + '/feed/addFeed', {\n        title: SNewPostTitle,\n        content: SNewPostContent\n      });\n      setNPostCount(NPostCount + 1);\n      setSNewPostTitle(\"\");\n      setSNewPostContent(\"\");\n    };\n\n    asyncFun().catch(e => window.alert(`AN ERROR OCCURED! ${e}`));\n  };\n\n  const modifyPost = id => {\n    const asyncFun = async () => {\n      let newTitle = prompt(\"New Title : \");\n      let newContent = prompt(\"New Content : \");\n      await axios.post(SAPIBase + '/feed/modifyFeed', {\n        id: id,\n        title: newTitle,\n        content: newContent\n      });\n    };\n\n    asyncFun().catch(e => window.alert(`AN ERROR OCCURED! ${e}`));\n  };\n\n  const deletePost = id => {\n    const asyncFun = async () => {\n      // One can set X-HTTP-Method header to DELETE to specify deletion as well\n      await axios.post(SAPIBase + '/feed/deleteFeed', {\n        id: id\n      });\n      setNPostCount(Math.max(NPostCount - 1, 0));\n    };\n\n    asyncFun().catch(e => window.alert(`AN ERROR OCCURED! ${e}`));\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"Feed\",\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Feed\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"feed-length-input\",\n      children: [\"Number of posts to show: \\xA0\\xA0\", /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        value: NPostCount,\n        id: \"post-count-input\",\n        min: 0,\n        onChange: e => setNPostCount(parseInt(e.target.value))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"feed-list\",\n      children: [LAPIResponse.map((val, i) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"feed-item\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"delete-item\",\n          onClick: e => deletePost(`${val.id}`),\n          children: \"\\u24E7\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"modify-item\",\n          onClick: e => modifyPost(`${val.id}`),\n          children: \"!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n          className: \"feed-title\",\n          children: val.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"feed-body\",\n          children: val.content\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 13\n        }, this)]\n      }, i, true, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 11\n      }, this)), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"feed-item-add\",\n        children: [\"Title: \", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: SNewPostTitle,\n          onChange: e => setSNewPostTitle(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 18\n        }, this), \"\\xA0\\xA0\\xA0\\xA0 Content: \", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: SNewPostContent,\n          onChange: e => setSNewPostContent(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 20\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"post-add-button\",\n          onClick: e => createNewPost(),\n          children: \"Add Post!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 5\n  }, this);\n};\n\n_s(FeedPage, \"ZbW7vmR5RP3h6slPs4ui4A4sj+U=\");\n\n_c = FeedPage;\nexport default FeedPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"FeedPage\");","map":{"version":3,"sources":["E:/Sparcs-Express/sparcs-database-seminar/sparcs-node-express-seminar/client/src/pages/feed.tsx"],"names":["React","axios","SAPIBase","Header","FeedPage","props","LAPIResponse","setLAPIResponse","useState","NPostCount","setNPostCount","SNewPostTitle","setSNewPostTitle","SNewPostContent","setSNewPostContent","useEffect","BComponentExited","asyncFun","data","get","console","log","catch","e","window","alert","createNewPost","post","title","content","modifyPost","id","newTitle","prompt","newContent","deletePost","Math","max","parseInt","target","value","map","val","i"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport axios from \"axios\";\nimport { SAPIBase } from \"../tools/api\";\nimport Header from \"../components/header\";\nimport \"./css/feed.css\";\n\ninterface IAPIResponse  { id: number, title: string, content: string }\n\nconst FeedPage = (props: {}) => {\n  const [ LAPIResponse, setLAPIResponse ] = React.useState<IAPIResponse[]>([]);\n  const [ NPostCount, setNPostCount ] = React.useState<number>(0);\n  const [ SNewPostTitle, setSNewPostTitle ] = React.useState<string>(\"\");\n  const [ SNewPostContent, setSNewPostContent ] = React.useState<string>(\"\");\n\n  React.useEffect( () => {\n    let BComponentExited = false;\n    const asyncFun = async () => {\n      const { data } = await axios.get<IAPIResponse[]>( SAPIBase + `/feed/getFeed?count=${ NPostCount }`);\n      console.log(data);\n      // const data = [ { id: 0, title: \"test1\", content: \"Example body\" }, { id: 1, title: \"test2\", content: \"Example body\" }, { id: 2, title: \"test3\", content: \"Example body\" } ].slice(0, NPostCount);\n      if (BComponentExited) return;\n      setLAPIResponse(data);\n    };\n    asyncFun().catch((e) => window.alert(`Error while running API Call: ${e}`));\n    return () => { BComponentExited = true; }\n  }, [ NPostCount ]);\n\n  const createNewPost = () => {\n    const asyncFun = async () => {\n      await axios.post( SAPIBase + '/feed/addFeed', { title: SNewPostTitle, content: SNewPostContent } );\n      setNPostCount(NPostCount + 1);\n      setSNewPostTitle(\"\");\n      setSNewPostContent(\"\");\n    }\n    asyncFun().catch(e => window.alert(`AN ERROR OCCURED! ${e}`));\n  }\n\n  const modifyPost = (id: string) => {\n    const asyncFun = async () => {\n      let newTitle = prompt(\"New Title : \")\n      let newContent = prompt(\"New Content : \")\n      await axios.post( SAPIBase + '/feed/modifyFeed', {id:id, title: newTitle, content: newContent } );\n    };\n    asyncFun().catch(e => window.alert(`AN ERROR OCCURED! ${e}`));\n  }\n\n\n  const deletePost = (id: string) => {\n    const asyncFun = async () => {\n      // One can set X-HTTP-Method header to DELETE to specify deletion as well\n      await axios.post( SAPIBase + '/feed/deleteFeed', { id: id } );\n      setNPostCount(Math.max(NPostCount - 1, 0));\n    }\n    asyncFun().catch(e => window.alert(`AN ERROR OCCURED! ${e}`));\n  }\n\n  return (\n    <div className=\"Feed\">\n      <Header/>\n      <h2>Feed</h2>\n      <div className={\"feed-length-input\"}>\n        Number of posts to show: &nbsp;&nbsp;\n        <input type={\"number\"} value={ NPostCount } id={\"post-count-input\"} min={0}\n               onChange={ (e) => setNPostCount( parseInt(e.target.value) ) }\n        />\n      </div>\n      <div className={\"feed-list\"}>\n        { LAPIResponse.map( (val, i) =>\n          <div key={i} className={\"feed-item\"}>\n            <div className={\"delete-item\"} onClick={(e) => deletePost(`${val.id}`)}>ⓧ</div>\n            <div className={\"modify-item\"} onClick={(e) => modifyPost(`${val.id}`)}>!</div>\n            <h3 className={\"feed-title\"}>{ val.title }</h3>\n            <p className={\"feed-body\"}>{ val.content }</p>\n          </div>\n        ) }\n        <div className={\"feed-item-add\"}>\n          Title: <input type={\"text\"} value={SNewPostTitle} onChange={(e) => setSNewPostTitle(e.target.value)}/>\n          &nbsp;&nbsp;&nbsp;&nbsp;\n          Content: <input type={\"text\"} value={SNewPostContent} onChange={(e) => setSNewPostContent(e.target.value)}/>\n          <div className={\"post-add-button\"} onClick={(e) => createNewPost()}>Add Post!</div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default FeedPage;"]},"metadata":{},"sourceType":"module"}