{"ast":null,"code":"var _jsxFileName = \"E:\\\\Sparcs-Express\\\\sparcs-database-seminar\\\\sparcs-node-express-seminar\\\\client\\\\src\\\\pages\\\\account.tsx\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport Header from \"../components/header\";\nimport axios from \"axios\";\nimport { SAPIBase } from \"../tools/api\";\nimport \"./css/account.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst AccountPage = () => {\n  _s();\n\n  const [SID, setSID] = React.useState(\"\");\n  const [SPW, setSPW] = React.useState(\"\");\n  const [NBalance, setNBalance] = React.useState(\"Not Authorized\");\n  const [NTransaction, setNTransaction] = React.useState(0);\n\n  const getAccountInformation = () => {\n    const asyncFun = async () => {\n      ;\n      const {\n        data\n      } = await axios.post(SAPIBase + '/account/getInfo', {\n        credential: SAPIKEY\n      });\n      setNBalance(data.balance);\n    };\n\n    asyncFun().catch(e => window.alert(`AN ERROR OCCURED: ${e}`));\n  };\n\n  const performTransaction = amount => {\n    const asyncFun = async () => {\n      if (amount === '') return;\n      ;\n      const {\n        data\n      } = await axios.post(SAPIBase + '/account/transaction', {\n        credential: SAPIKEY,\n        amount: amount\n      });\n      setNTransaction(0);\n\n      if (!data.success) {\n        window.alert('Transaction Failed:' + data.msg);\n        return;\n      }\n\n      window.alert(`Transaction Success! ₩${NBalance} -> ₩${data.balance}\\nThank you for using SPARCS Bank`);\n      setNTransaction(0);\n      setNBalance(data.balance);\n    };\n\n    asyncFun().catch(e => window.alert(`AN ERROR OCCURED: ${e}`));\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"account\",\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Account\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"account-token-input\",\n      children: [\"Enter ID: \", /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: SID,\n        onChange: e => setSID(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 19\n      }, this), \"Enter PW: \", /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: SPW,\n        onChange: e => setSPW(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 19\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: e => getAccountInformation(),\n        children: \"GET\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"account-bank\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"The National Bank of SPARCS API\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"balance\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"balance-title\",\n          children: \"Current Balance\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"balance-value \" + (typeof NBalance === \"number\" ? NBalance >= 0 ? \"balance-positive\" : \"balance-negative\" : \"\"),\n          children: [\"\\u20A9 \", NBalance]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"transaction\",\n        children: [\"\\u20A9 \", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          value: NTransaction,\n          min: 0,\n          onChange: e => setNTransaction(e.target.value === '' ? '' : parseInt(e.target.value))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: e => performTransaction(NTransaction),\n          children: \"DEPOSIT\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: e => performTransaction(NTransaction === '' ? '' : NTransaction * -1),\n          children: \"WITHDRAW\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }, this);\n};\n\n_s(AccountPage, \"/B6FWBanYHO7mJ5CLoKfg6QqBaM=\");\n\n_c = AccountPage;\nexport default AccountPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"AccountPage\");","map":{"version":3,"sources":["E:/Sparcs-Express/sparcs-database-seminar/sparcs-node-express-seminar/client/src/pages/account.tsx"],"names":["React","Header","axios","SAPIBase","AccountPage","SID","setSID","useState","SPW","setSPW","NBalance","setNBalance","NTransaction","setNTransaction","getAccountInformation","asyncFun","data","post","credential","SAPIKEY","balance","catch","e","window","alert","performTransaction","amount","success","msg","target","value","parseInt"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport Header from \"../components/header\";\nimport axios from \"axios\";\nimport {SAPIBase} from \"../tools/api\";\nimport \"./css/account.css\";\n\nconst AccountPage = () => {\n  const [ SID, setSID ] = React.useState<string>(\"\");\n  const [ SPW, setSPW ] = React.useState<string>(\"\");\n  const [ NBalance, setNBalance ] = React.useState<number | \"Not Authorized\">(\"Not Authorized\");\n  const [ NTransaction, setNTransaction ] = React.useState<number | ''>(0);\n\n  const getAccountInformation = () => {\n    const asyncFun = async() => {\n      interface IAPIResponse { balance: number };\n      const { data } = await axios.post<IAPIResponse>(SAPIBase + '/account/getInfo', { credential: SAPIKEY });\n      setNBalance(data.balance);\n    }\n    asyncFun().catch((e) => window.alert(`AN ERROR OCCURED: ${e}`));\n  }\n\n  const performTransaction = ( amount: number | '' ) => {\n    const asyncFun = async() => {\n      if (amount === '') return;\n      interface IAPIResponse { success: boolean, balance: number, msg: string };\n      const { data } = await axios.post<IAPIResponse>(SAPIBase + '/account/transaction', { credential: SAPIKEY, amount: amount });\n      setNTransaction(0);\n      if (!data.success) {\n        window.alert('Transaction Failed:' + data.msg);\n        return;\n      }\n      window.alert(`Transaction Success! ₩${ NBalance } -> ₩${ data.balance }\\nThank you for using SPARCS Bank`);\n      setNTransaction(0);\n      setNBalance(data.balance);\n    }\n    asyncFun().catch((e) => window.alert(`AN ERROR OCCURED: ${e}`));\n  }\n\n  return (\n    <div className={\"account\"}>\n      <Header/>\n      <h2>Account</h2>\n      <div className={\"account-token-input\"}>\n        Enter ID: <input type={\"text\"} value={SID} onChange={e => setSID(e.target.value)}/>\n        Enter PW: <input type={\"text\"} value={SPW} onChange={e => setSPW(e.target.value)}/>\n        <button onClick={e => getAccountInformation()}>GET</button>\n      </div>\n      <div className={\"account-bank\"}>\n        <h3>The National Bank of SPARCS API</h3>\n        <div className={\"balance\"}>\n          <p className={\"balance-title\"}>Current Balance</p>\n          <p className={\"balance-value \" + (typeof(NBalance) === \"number\" ? (NBalance >= 0 ? \"balance-positive\" : \"balance-negative\") : \"\")}>₩ { NBalance }</p>\n        </div>\n        <div className={\"transaction\"}>\n          ₩ <input type={\"number\"} value={NTransaction} min={0} onChange={e => setNTransaction(e.target.value === '' ? '' : parseInt(e.target.value))}/>\n          <button onClick={e => performTransaction(NTransaction)}>DEPOSIT</button>\n          <button onClick={e => performTransaction(NTransaction === '' ? '' : NTransaction * -1)}>WITHDRAW</button>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default AccountPage;"]},"metadata":{},"sourceType":"module"}