{"ast":null,"code":"var _s = $RefreshSig$();\n\n// https://velog.io/@jakeseo_me/%EB%B2%88%EC%97%AD-%EB%A6%AC%EC%95%A1%ED%8A%B8-%ED%9B%85%EC%8A%A4-%EC%BB%B4%ED%8F%AC%EB%84%8C%ED%8A%B8%EC%97%90%EC%84%9C-setInterval-%EC%82%AC%EC%9A%A9-%EC%8B%9C%EC%9D%98-%EB%AC%B8%EC%A0%9C%EC%A0%90 참고\nimport React from \"react\";\n\nconst useInterval = (callback, delay) => {\n  _s();\n\n  let savedCallback = React.useRef();\n  React.useEffect(() => {\n    savedCallback.current = callback;\n  });\n  React.useEffect(() => {\n    const tick = () => {\n      if (savedCallback.current) savedCallback.current();\n    };\n\n    let id = setInterval(tick, delay);\n    return () => clearInterval(id);\n  }, [delay]);\n};\n\n_s(useInterval, \"dqNZMqbncP+HtqBlD20aSNv0Ugk=\");\n\nexport { useInterval };","map":{"version":3,"sources":["E:/Sparcs-Express/sparcs-database-seminar/sparcs-node-express-seminar/client/src/tools/interval.ts"],"names":["React","useInterval","callback","delay","savedCallback","useRef","useEffect","current","tick","id","setInterval","clearInterval"],"mappings":";;AAAA;AACA,OAAOA,KAAP,MAAkB,OAAlB;;AAEA,MAAMC,WAAW,GAAG,CAACC,QAAD,EAAoBC,KAApB,KAAsC;AAAA;;AACxD,MAAIC,aAAa,GAAGJ,KAAK,CAACK,MAAN,EAApB;AAEAL,EAAAA,KAAK,CAACM,SAAN,CAAgB,MAAM;AACpBF,IAAAA,aAAa,CAACG,OAAd,GAAwBL,QAAxB;AACD,GAFD;AAIAF,EAAAA,KAAK,CAACM,SAAN,CAAgB,MAAM;AACpB,UAAME,IAAI,GAAG,MAAM;AACjB,UAAGJ,aAAa,CAACG,OAAjB,EAA0BH,aAAa,CAACG,OAAd;AAC3B,KAFD;;AAGA,QAAIE,EAAE,GAAGC,WAAW,CAACF,IAAD,EAAOL,KAAP,CAApB;AACA,WAAO,MAAMQ,aAAa,CAACF,EAAD,CAA1B;AACD,GAND,EAMG,CAACN,KAAD,CANH;AAOD,CAdD;;GAAMF,W;;AAgBN,SAASA,WAAT","sourcesContent":["// https://velog.io/@jakeseo_me/%EB%B2%88%EC%97%AD-%EB%A6%AC%EC%95%A1%ED%8A%B8-%ED%9B%85%EC%8A%A4-%EC%BB%B4%ED%8F%AC%EB%84%8C%ED%8A%B8%EC%97%90%EC%84%9C-setInterval-%EC%82%AC%EC%9A%A9-%EC%8B%9C%EC%9D%98-%EB%AC%B8%EC%A0%9C%EC%A0%90 참고\nimport React from \"react\";\n\nconst useInterval = (callback: ()=>any, delay: number) => {\n  let savedCallback = React.useRef<()=>any>();\n\n  React.useEffect(() => {\n    savedCallback.current = callback;\n  });\n\n  React.useEffect(() => {\n    const tick = () => {\n      if(savedCallback.current) savedCallback.current();\n    }\n    let id = setInterval(tick, delay);\n    return () => clearInterval(id);\n  }, [delay]);\n}\n\nexport { useInterval };"]},"metadata":{},"sourceType":"module"}